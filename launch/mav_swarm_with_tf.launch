<launch>
  <arg name="mav_name" default="iris"/>
  <arg name="world_name" default="straits"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="model" default="mav_with_rgbd_sensor" />
  <!-- <arg name="model" default="mav_generic_odometry_sensor" /> -->
  <!-- <arg name="model" default="mav_generic_noisy_odometry_sensor" /> -->
  
  <arg name="swarm_size" default="5" />
  <arg name="goal_x" default="-17.0" />
  <arg name="goal_y" default="2.0" />
  <arg name="goal_z" default="2.0" />
  <arg name="leader_selection" default="false" />
  <arg name="uniform_distance" default="3.0" />


  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="paused" value="false"/>
  </include>

  <node name="control_node" pkg="swarm_drone" type="control_node" output="screen">
      <param name="goal_x" type="double" value="$(arg goal_x)" />
      <param name="goal_y" type="double" value="$(arg goal_y)" />
      <param name="goal_z" type="double" value="$(arg goal_z)" />
  </node>

  <group ns="$(arg mav_name)_0">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_0" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_0"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="0.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen" >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
  
  <group ns="$(arg mav_name)_1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_1" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_1"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <group ns="$(arg mav_name)_2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_2" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_2"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="-1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <group ns="$(arg mav_name)_3">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_3" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_3"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="-2.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <group ns="$(arg mav_name)_4">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_4" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_4"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="2.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <!-- <group ns="$(arg mav_name)_5">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_5" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_5"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="-4.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group> -->

  <!-- <group ns="$(arg mav_name)_6">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_6" />
      <arg name="model" value="$(find rotors_description)/urdf/$(arg model).gazebo" />    
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_6"/>
      <arg name="x" value="9.0"/>
      <arg name="y" value="4.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="prediction_node" pkg="swarm_drone" type="prediction_node" output="screen"  >
      <param name="leader_selection" type="bool" value="$(arg leader_selection)" />
      <param name="uniform_distance" type="double" value="$(arg uniform_distance)" />
    </node>
    <node name="perception_node" pkg="swarm_drone" type="perception_node" output="screen" >
      <param name="swarm_size" type="int" value="$(arg swarm_size)" />
    </node>  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group> -->
</launch> 

